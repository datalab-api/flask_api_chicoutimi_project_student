version: '3.4'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-api8inf349}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped
  api8inf349:
    container_name: api8inf349
    image: api8inf349:latest
    # build: 
    #   context: .
    #   dockerfile: Dockerfile
    ports:
      - '0.0.0.0:5000:5000'
    environment:
      DB_HOST: postgres
      DB_USER: user
      DB_PASSWORD: pass    
      DB_NAME: api8inf349
      REDIS_URL: redis://cache
    networks:
      - postgres
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin:
    cache:
  
